name: Build latest (Linux)
# trigger via either push to selected branches or on manual run
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-linux
  cancel-in-progress: true

jobs:
#============================================
# =============== 32 BIT LINUX ==============
# ===========================================
  build-32:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        shell: bash
        run: |
          apt-get -y update
          apt-get -y install gcc-multilib wget curl unzip

      - name: Retrieve dependencies
        shell: bash
        run: |
          wget https://github.com/ClassiCube/rpi-compiling-stuff/raw/main/linux32.zip
          unzip linux32.zip

      - name: Compile 32 bit Linux builds
        shell: bash
        id: compile
        env: 
          LIBS: "-lX11 -lXi -lpthread -lGL -lm -ldl"
          SRCS: "src/*.c third_party/bearssl/src/*.c"
          COMMON_FLAGS: "-O1 -s -fno-stack-protector -fno-math-errno -Qn -Werror -Ithird_party/bearssl/inc"
          NIX32_FLAGS:  "-no-pie -fno-pie -m32 -fvisibility=hidden -fcf-protection=none -rdynamic -L ./lib -Wl,--unresolved-symbols=ignore-in-shared-libs"
        run: |
          LATEST_FLAG=-DCC_COMMIT_SHA=\"${GITHUB_SHA::9}\"
          
          gcc ${{ env.SRCS }} ${{ env.COMMON_FLAGS }} ${{ env.NIX32_FLAGS }} $LATEST_FLAG -o cc0-nix32-gl1 ${{ env.LIBS }}
          gcc ${{ env.SRCS }} ${{ env.COMMON_FLAGS }} ${{ env.NIX32_FLAGS }} $LATEST_FLAG -DCC_GFX_BACKEND=CC_GFX_BACKEND_GL2 -o cc0-nix32-gl2 ${{ env.LIBS }}


      - uses: ./.github/actions/notify_failure
        if: ${{ always() && steps.compile.outcome == 'failure' }}
        with:
          NOTIFY_MESSAGE: 'Failed to compile 32 bit ClassiCube0 Linux builds! <@999409543001931788>'
          WEBHOOK_URL: '${{ secrets.WEBHOOK_URL }}'
      
      
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'cc0-nix32-gl1'
          DEST_NAME: 'ClassiCube0-Linux32-OpenGL'
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'cc0-nix32-gl2'
          DEST_NAME: 'ClassiCube0-Linux32-ModernGL'
          
          
      - uses: ./.github/actions/notify_success
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          NOTIFY_MESSAGE: 'Successfully compiled 32 bit ClassiCube0 Linux builds.'
          WEBHOOK_URL: '${{ secrets.WEBHOOK_URL }}'

#============================================
# =============== 64 BIT LINUX ==============
# ===========================================
  build-64:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        shell: bash
        run: |
          apt-get -y update
          apt-get -y install gcc wget curl unzip

      - name: Retrieve dependencies
        shell: bash
        run: |
          wget https://github.com/ClassiCube/rpi-compiling-stuff/raw/main/linux64.zip
          unzip linux64.zip

      - name: Compile 64 bit Linux builds
        shell: bash
        id: compile
        env:
          LIBS: "-lX11 -lXi -lpthread -lGL -lm -ldl"
          SRCS: "src/*.c third_party/bearssl/src/*.c" 
          COMMON_FLAGS: "-O1 -s -fno-stack-protector -fno-math-errno -Qn -Werror -Ithird_party/bearssl/inc"
          NIX64_FLAGS:  "-no-pie -fno-pie -m64 -fvisibility=hidden -fcf-protection=none -rdynamic -L ./lib -Wl,--unresolved-symbols=ignore-in-shared-libs"
        run: |
          LATEST_FLAG=-DCC_COMMIT_SHA=\"${GITHUB_SHA::9}\"
         
          gcc ${{ env.SRCS }} ${{ env.COMMON_FLAGS }} ${{ env.NIX64_FLAGS }} $LATEST_FLAG -o cc0-nix64-gl1 ${{ env.LIBS }}
          gcc ${{ env.SRCS }} ${{ env.COMMON_FLAGS }} ${{ env.NIX64_FLAGS }} $LATEST_FLAG -DCC_GFX_BACKEND=CC_GFX_BACKEND_GL2 -o cc0-nix64-gl2 ${{ env.LIBS }}
          #gcc ${{ env.SRCS }} ${{ env.COMMON_FLAGS }} ${{ env.NIX64_FLAGS }} $LATEST_FLAG -DCC_GFX_BACKEND=CC_GFX_BACKEND_GL2 -DCC_WIN_BACKEND=CC_WIN_BACKEND_SDL2 -o cc0-sdl64-gl2 -lSDL2  ${{ env.LIBS }}


      - uses: ./.github/actions/notify_failure
        if: ${{ always() && steps.compile.outcome == 'failure' }}
        with:
          NOTIFY_MESSAGE: 'Failed to compile 64 bit ClassiCube0 Linux builds! <@999409543001931788>'
          WEBHOOK_URL: '${{ secrets.WEBHOOK_URL }}'
          
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'cc0-nix64-gl1'
          DEST_NAME: 'ClassiCube0-Linux64-OpenGL'
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'cc0-nix64-gl2'
          DEST_NAME: 'ClassiCube0-Linux64-ModernGL'
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'cc0-sdl64-gl2'
          DEST_NAME: 'ClassiCube0-Linux64-SDL2'
          
          
      - uses: ./.github/actions/notify_success
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          NOTIFY_MESSAGE: 'Successfully compiled 64 bit ClassiCube0 Linux builds.'
          WEBHOOK_URL: '${{ secrets.WEBHOOK_URL }}'